% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MTuples-class.R
\name{MTuples}
\alias{MTuples}
\alias{MTuplesFromBSgenome}
\alias{MTuplesFromGTuples}
\title{MTuples constructors}
\usage{
MTuples(seqnames = Rle(), tuples = matrix(), strand = Rle("*",
  length(seqnames)), ..., seqlengths = NULL, seqinfo = NULL,
  methinfo = MethInfo())

MTuplesFromGTuples(gtuples = GTuples(), methinfo = MethInfo())

MTuplesFromBSgenome(bsgenome, methinfo, size, ...)
}
\arguments{
\item{seqnames}{\linkS4class{Rle} object, character vector, or 
factor containing the sequence names.}

\item{tuples}{\link[base]{matrix} object containing the positions of the 
tuples. The first column should refer to pos1, the second to pos2, etc.}

\item{strand}{\linkS4class{Rle} object, character vector, or 
factor containing the strand information.}

\item{...}{\itemize{
 \item For \code{MTuples()}, optional metadata columns. These columns cannot 
 be named "\code{start}", "\code{end}", "\code{width}", or "\code{element}".
 \item For \code{MTuplesFromBSgenome()}, arguments passed to 
 \linkS4class{BSParams}, see 'Extracting MTuples from a BSgenome object'.
}}

\item{seqlengths}{\code{NULL}, or an integer vector named with 
\code{levels(seqnames)} and containing the lengths (or \code{NA}) for each 
level in \code{levels(seqnames)}.}

\item{seqinfo}{\code{NULL}, or a \linkS4class{Seqinfo} object 
containing allowed sequence names, lengths (or \code{NA}), and circularity 
flag, for each level in \code{levels(seqnames)}.}

\item{methinfo}{A \linkS4class{MethInfo} object containing information 
about the methylation loci present in the \linkS4class{MTuples} object.}

\item{gtuples}{A \linkS4class{GTuples} object containing the positions of 
the methylation loci as genomic tuples.}

\item{bsgenome}{A \linkS4class{BSgenome} object.}

\item{size}{An \code{integer} specifying the size of tuples for which to 
search.}
}
\value{
An \linkS4class{MTuples} object.
}
\description{
There are three ways to construct a \linkS4class{MTuples} object:
\enumerate{
 \item 'From scratch' using \code{MTuples()}
 \item From an existing \linkS4class{GTuples} object using 
   \code{MTuplesFromGTuples()}
 \item By finding and extracting these from a 
   \linkS4class{BSgenome} object using \code{MTuplesFromBSgenome()}
}
}
\section{Extracting MTuples from a BSgenome object}{

\code{MTuplesFromBSgenome()} will construct an \linkS4class{MTuples} object 
by extracting \emph{adjacent} m-tuples from a \linkS4class{BSgenome} object 
containing the full genome sequence of a given organism. The \code{'CN'} 
\code{methtype} is not currently supported.

The \code{...} are passed through to a call the construction of a 
\linkS4class{BSParams} object; this can be useful, for example, to 
exclude certain \code{seqlevels} from the \linkS4class{BSgenome} object, 
such as unassigned contigs; see 'Examples' and 
\code{?\linkS4class{BSParams}} for further detail.
}
\examples{
# TODO: Examples for MTuples() and MTuplesFromGTuples()

\dontrun{
# Find all CG 2-tuples on chr9 of the human reference genome (hg19)
# TODO: Should the example use library or require?
library(BSgenome.Hsapiens.UCSC.hg19)
MTuplesFromBSgenome(bsgenome = BSgenome.Hsapiens.UCSC.hg19,
                    methinfo = MethInfo("CG"), 
                    size = 2,
                    exclude = c(paste0("chr", 1:8), "X", "Y", "M", "_"))
                    
# NOTE: exclude uses regular expressions, so exclude = "chr1" will also 
        exclude "chr1", "chr10", "chr11", etc.
x <- MTuplesFromBSgenome(bsgenome = BSgenome.Hsapiens.UCSC.hg19,
                         methinfo = MethInfo("CG"),
                         size = 1,
                         exclude = "chr1")
unique(seqnames(x))
}
}
\seealso{
The \linkS4class{MTuples} class description
}

